#!/bin/sh

# URL для загрузки конфигурации
CONFIG_URL="https://domain.com/sub"
# Путь для сохранения конфигурации
CONFIG_PATH="/opt/clash/config.yaml"
# Временный файл для загрузки
TEMP_PATH="/tmp/clash_config_temp.yaml"

# Загружаем конфигурацию во временный файл
curl -A "Clash" -o "$TEMP_PATH" "$CONFIG_URL"

# Проверяем, успешно ли загружен файл
if [ $? -ne 0 ]; then
    echo "Ошибка загрузки конфигурации"
    rm -f "$TEMP_PATH"
    exit 1
fi

# Проверяем, что файл не пустой
if [ ! -s "$TEMP_PATH" ]; then
    echo "Загруженный файл пустой"
    rm -f "$TEMP_PATH"
    exit 1
fi

# Проверяем, не является ли файл HTML
if grep -qiE "<!DOCTYPE html>|<html>|<head>|<body>" "$TEMP_PATH"; then
    echo "Загруженный файл является HTML, а не YAML"
    rm -f "$TEMP_PATH"
    exit 1
fi

# Базовая проверка на наличие ключевых слов YAML (например, 'proxy-groups:' для Clash)
if ! grep -q "^proxy-groups:" "$TEMP_PATH"; then
    echo "Файл не содержит ожидаемой структуры YAML (отсутствует 'proxy-groups:')"
    rm -f "$TEMP_PATH"
    exit 1
fi

# Проверка на наличие некорректных символов (опционально)
if grep -q "[^[:print:]\n\t -~]" "$TEMP_PATH"; then
    echo "Файл содержит некорректные символы"
    rm -f "$TEMP_PATH"
    exit 1
fi

# Если проверки пройдены, перемещаем файл в целевой путь
mv "$TEMP_PATH" "$CONFIG_PATH"

# Перезапускаем сервис Clash
/etc/init.d/clash restart

if [ $? -eq 0 ]; then
    echo "Конфигурация успешно обновлена и сервис перезапущен"
else
    echo "Ошибка при перезапуске сервиса Clash"
    exit 1
fi